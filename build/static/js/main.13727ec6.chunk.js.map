{"version":3,"sources":["constants/ColorPick.js","contexts/ColorContext.js","componets/Name/Name.js","componets/Name/GameName.js","componets/Name/ColorName.js","componets/Name/PlayerName.js","componets/Login/Login.js","services/websocket.js","componets/ColorPicker/ColorInput.js","lib/hexToHSL.js","componets/ColorPicker/ColorPicker.js","App.js","reportWebVitals.js","index.js"],"names":["defaultColor","ColorContext","createContext","ColorProvider","children","useState","color","setColor","backgroundColor","setBackgroundColor","user","setUser","values","login","setLogin","Provider","value","Name","useContext","style","v","fontWeight","position","right","bottom","fontFamily","fontSize","textAlign","GameName","left","top","ColorName","hex","PlayerName","username","Login","socket","setUsername","className","onSubmit","e","preventDefault","id","onChange","target","ColorInput","handleColorChange","c","gameChanger","hslValue","H","r","g","b","length","cmin","Math","min","cmax","max","delta","h","l","round","abs","toFixed","hexToHSL","s","emit","type","border","placement","memo","ColorPicker","useEffect","io","transports","console","log","on","disconnect","cb","coolor","subscribeColorStream","background","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13727ec6.chunk.js","sourcesContent":["export const defaultColor = {\n  \"rgba\" : \"rgba(245,245,220,1)\",\n  \"hex\" : \"#E0E05A\",\n  \"h\": \"90\",\n  \"s\" : \"100\",\n  \"v\" : \"50\",\n  \"a\" : \"1\",\n};\n\n// export const defaultPlayer = {\n//   \"username\":\"Player\",\n//   \"color\":\"#xxxxxx\"\n// };","import {createContext,useState} from 'react';\nimport {defaultColor} from '../constants/ColorPick';\n\nconst ColorContext = createContext(null);\n\nexport function ColorProvider({children}) {\n  const [color,setColor] = useState(defaultColor);\n  const [backgroundColor,setBackgroundColor] = useState(color);\n  const [user,setUser] = useState(null);\n  const [login,setLogin] = useState(false);\n\n\n  const values={\n    color,\n    setColor,\n    login,\n    setLogin,\n    user,\n    setUser,\n    backgroundColor,\n    setBackgroundColor\n  };\n\n  return (\n    <ColorContext.Provider value={values}>\n      {children}\n    </ColorContext.Provider>\n  )\n}\n\nexport default ColorContext;\n","import {useContext} from 'react';\nimport ColorContext from '../../contexts/ColorContext';\n\nfunction Name() {\n  const {color,user} = useContext(ColorContext);\n\n  return (\n    <div\n      style={{\n        color:(color.v<50)?\"white\":\"black\",\n        fontWeight:400,\n        position:\"fixed\",\n        right:\"25px\",\n        bottom:\"25px\",\n        fontFamily:\"Roboto\",\n        fontSize:\"32px\",\n        textAlign:\"right\"\n      }}\n    >\n      <span\n        style={{\n          fontSize:\"14px\"\n        }}\n      >\n        Username\n      </span>\n      <br/>\n      {user===null?\"-\":user}\n    </div>\n  )\n}\n\nexport default Name;\n","import {useContext} from 'react';\nimport ColorContext from '../../contexts/ColorContext';\n\nfunction GameName() {\n  const {color} = useContext(ColorContext);\n\n  return (\n    <div\n      style={{\n        color:(color.v<50)?\"white\":\"black\",\n        fontWeight:400,\n        position:\"fixed\",\n        left:\"25px\",\n        top:\"25px\",\n        fontFamily:\"Roboto\",\n        fontSize:\"20px\",\n        textAlign:\"left\"\n      }}\n    >\n      Color-Sockets v0.1a\n      <br/>\n      <span\n        style={{\n          fontSize:\"14px\"\n        }}\n      >\n        x player in game\n      </span>\n    </div>\n  )\n}\n\nexport default GameName;\n","import {useContext} from 'react';\nimport ColorContext from '../../contexts/ColorContext';\n\nfunction ColorName() {\n  const {color} = useContext(ColorContext);\n  return (\n    <div\n      style={{\n        color:(color.v<50)?\"white\":\"black\",\n        fontWeight:400,\n        position:\"fixed\",\n        left:\"25px\",\n        bottom:\"25px\",\n        fontFamily:\"Roboto\",\n        fontSize:\"24px\",\n        textAlign:\"left\"\n      }}\n    >\n      <span\n        style={{\n          fontSize:\"14px\"\n        }}\n      >\n        Color\n      </span>\n      <br/>\n      {color.hex}\n    </div>\n  )\n}\n\nexport default ColorName;\n","import {useContext} from 'react';\nimport ColorContext from '../../contexts/ColorContext';\n\nfunction PlayerName() {\n  const {color} = useContext(ColorContext);\n\n  return (\n    <div\n      style={{\n        color:(color.v<50)?\"white\":\"black\",\n        fontWeight:400,\n        position:\"fixed\",\n        right:\"25px\",\n        top:\"25px\",\n        fontFamily:\"Roboto\",\n        fontSize:\"20px\",\n        textAlign:\"right\"\n      }}\n    >\n      {color.username?color.username:\"Player\"}\n      {color.username?color.hex:\"#xxxxxx\"}\n      <br/>\n      <span\n        style={{\n          fontSize:\"14px\"\n        }}\n      >\n        Latest Player\n      </span>\n    </div>\n  )\n}\n\nexport default PlayerName;\n","import {useContext,useState} from 'react';\n\nimport ColorContext from '../../contexts/ColorContext';\n\nfunction Login() {\n  const {setLogin,setUser} = useContext(ColorContext);\n  const [username,setUsername] = useState(null);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setUser(username);\n    setLogin(true);\n  };\n\n  return (\n    <form \n      className=\"login\"\n      onSubmit={handleSubmit}\n    >\n      <label>Enter a username!</label>\n      <br />\n      <br />\n      <input \n        id={\"username\"} \n        onChange={e=>setUsername(e.target.value)}\n      />\n\n    </form>\n  )\n}\n\nexport default Login\n","import io from 'socket.io-client';\n\nlet socket;\n\nexport const initSocket = () => {\n\tsocket = io('http://localhost:3000', {\n\t\ttransports: ['websocket'],\n\t});\n\n\tconsole.log('Connecting...');\n\tsocket.on('connect', () => console.log('Connected!'));\n};\n\nexport const disconnectSocket = () => {\n\tconsole.log('Disconnecting...');\n\tif (socket) socket.disconnect();\n};\n\nexport const sendColor = (gameChanger) => {\n\tif (socket) socket.emit('new-color', gameChanger);\n};\n\nexport const subscribeColorStream = (cb) => {\n\tif (!socket) return true;\n\n\tsocket.on('color-stream', (coolor) => {\n\t\tconsole.log('New color recieved : ', coolor);\n\t\tcb(coolor);\n\t});\n};\n","import {useContext,memo} from 'react';\n//import InputColor from 'react-input-color';\n\nimport ColorContext from '../../contexts/ColorContext';\n\nimport {sendColor} from '../../services/websocket';\n\nimport {hexToHSL} from '../../lib/hexToHSL';\n\nfunction ColorInput() {\n  const {user,color,setColor} = useContext(ColorContext);\n\n  const handleColorChange = (c) => {\n    const hslValue = hexToHSL(c.target.value);\n    setColor({\n      \"username\":user,\n      \"hex\":c.target.value,\n      \"v\":hslValue.s\n    });\n     sendColor({\n       \"username\":user,\n       \"hex\":c.target.value\n     });\n  }\n\n  return (\n    <input \n      type=\"color\"\n      className=\"colorPicker\"\n      style={{\n        \"height\":\"50px\",\n        \"width\":\"50px\",\n        border:(color.v<60)?\"2px solid white\":\"2px solid black\"\n      }}\n      value={color.hex}\n      onChange={(c)=>{handleColorChange(c)}}\n      placement=\"center\"\n    >\n    \n    </input>\n    // <InputColor \n    //     className=\"colorPicker\"\n    //     style={{\n    //       \"height\":\"50px\",\n    //       \"width\":\"50px\",\n    //       border:(color.v<60)?\"2px solid white\":\"2px solid black\"\n    //     }}\n    //     initialValue={color.hex}\n    //     onChange={(c)=>{handleColorChange(c)}}\n    //     placement=\"center\"\n    //   />\n  )\n}\n\nexport default memo(ColorInput);\n","export const hexToHSL = (H) => {\n  // Convert hex to RGB first\n  let r = 0, g = 0, b = 0;\n  if (H.length === 4) {\n    r = \"0x\" + H[1] + H[1];\n    g = \"0x\" + H[2] + H[2];\n    b = \"0x\" + H[3] + H[3];\n  } else if (H.length === 7) {\n    r = \"0x\" + H[1] + H[2];\n    g = \"0x\" + H[3] + H[4];\n    b = \"0x\" + H[5] + H[6];\n  }\n  // Then to HSL\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  let cmin = Math.min(r,g,b),\n      cmax = Math.max(r,g,b),\n      delta = cmax - cmin,\n      h = 0,\n      s = 0,\n      l = 0;\n\n  if (delta === 0)\n    h = 0;\n  else if (cmax === r)\n    h = ((g - b) / delta) % 6;\n  else if (cmax === g)\n    h = (b - r) / delta + 2;\n  else\n    h = (r - g) / delta + 4;\n\n  h = Math.round(h * 60);\n\n  if (h < 0)\n    h += 360;\n\n  l = (cmax + cmin) / 2;\n  s = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n  s = +(s * 100).toFixed(1);\n  l = +(l * 100).toFixed(1);\n\n  //return \"hsl(\" + h + \",\" + s + \"%,\" + l + \"%)\";\n  return {\n    \"h\":h,\n    \"s\":s,\n    \"l\":l\n  };\n}","import {useContext,useEffect} from 'react';\n\nimport Name from '../Name/Name';\nimport GameName from '../Name/GameName';\nimport ColorName from '../Name/ColorName';\nimport PlayerName from '../Name/PlayerName';\n\nimport Login from '../Login/Login';\nimport ColorInput from './ColorInput';\nimport ColorContext from '../../contexts/ColorContext';\n\nimport {\n  initSocket,\n  disconnectSocket,\n  subscribeColorStream\n} from '../../services/websocket'\n\n\nfunction ColorPicker() {\n  const {login,color,setColor} = useContext(ColorContext);\n\n  useEffect(() => {\n    initSocket();\n\n    return () => disconnectSocket();\n  }, [setColor])\n\n  useEffect(()=>{\n    subscribeColorStream((coolor)=>{\n      setColor(coolor);\n    });\n  },[setColor]);\n\n  return (\n    <div className=\"App\"\n      style={{background:color.hex}}\n    >\n        <GameName />\n      {login?\n        <>\n        <PlayerName />\n        <ColorInput />\n        </>\n        :\n        <Login />\n      }\n      <ColorName />\n      <Name />\n    </div>\n  )\n}\n\nexport default ColorPicker;\n","import './App.css';\nimport ColorPicker from './componets/ColorPicker/ColorPicker';\nimport {ColorProvider} from './contexts/ColorContext';\n\nfunction App() {\n\n  return (\n    <ColorProvider>\n      <ColorPicker />\n    </ColorProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}